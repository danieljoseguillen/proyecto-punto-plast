/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

 /*
 * Productos.java
 *
 *
 */
package PuntoPlast;

import claseconexion.Conectar;
import java.awt.event.KeyEvent;
import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Administrador
 */
public class Productos extends javax.swing.JFrame {
    DefaultTableModel tabla;
    final String msj="Codigo o Descripcion...";

    public Productos() {
        initComponents();
        Facturacion.pedidos=true;
        this.setVisible(true);
        cargarlistaproductos("");
    }
    
    void PlaceHolder(){
        ph.Mensaje(txtbuscar, msj, 0);
    }

    String comparar(String cod) {
        String cant = "";
        
        try {
            Statement st = cn.createStatement();
            ResultSet rs = st.executeQuery("SELECT * FROM producto WHERE Cod_prod='"+ cod +"'");
            while (rs.next()) {
                cant = rs.getString("Stock_prod");//Obtener el stock
            }
        } catch (SQLException ex) {
            Logger.getLogger(Productos.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        return cant;
    }
    
    public static void cargarlistaproductos(String dato) {
        DefaultTableModel tabla = (DefaultTableModel) tbprod.getModel();
        int a = tbprod.getRowCount() - 1;
        int i;
        for (i = a; i >= 0; i--){
            tabla.removeRow(i);
        }
            String[] Registro = new String[4];
            String sql = "SELECT * FROM producto WHERE (Cod_prod LIKE '"+dato+"%') OR (Nomb_prod LIKE '"+dato+"%')";
            Statement st;
            try {
                st = cn.createStatement();
                ResultSet rs = st.executeQuery(sql);
                    while (rs.next()) {
                        Registro[0] = rs.getString("Cod_prod");
                        Registro[1] = rs.getString("Nomb_prod");
                        Registro[2] = rs.getString("Precio_prod");
                        Registro[3] = rs.getString("Stock_prod");

                        tabla.addRow(Registro);
                    }
                    tbprod.setModel(tabla);
            } catch (SQLException ex) {
                Logger.getLogger(Productos.class.getName()).log(Level.SEVERE, null, ex);
            }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        mnenviarpro = new javax.swing.JMenuItem();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbprod = new javax.swing.JTable();
        txtbuscar = new javax.swing.JTextField();
        btnmostrar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        mnenviarpro.setText("Enviar a Factura");
        mnenviarpro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnenviarproActionPerformed(evt);
            }
        });
        jPopupMenu1.add(mnenviarpro);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("PRODUCTOS");
        setAlwaysOnTop(true);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        tbprod.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Descripción", "Precio", "Stock"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbprod.setComponentPopupMenu(jPopupMenu1);
        jScrollPane2.setViewportView(tbprod);

        txtbuscar.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtbuscarFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtbuscarFocusLost(evt);
            }
        });
        txtbuscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtbuscarKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtbuscarKeyTyped(evt);
            }
        });

        btnmostrar.setText("Mostrar todo");
        btnmostrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnmostrarActionPerformed(evt);
            }
        });

        jLabel1.setText("Buscar por:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 460, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtbuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnmostrar)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnmostrar)
                    .addComponent(txtbuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 297, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void btnmostrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnmostrarActionPerformed
// TODO add your handling code here:
    cargarlistaproductos("");
}//GEN-LAST:event_btnmostrarActionPerformed

private void txtbuscarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtbuscarKeyReleased
// TODO add your handling code here:
    cargarlistaproductos(txtbuscar.getText());
}//GEN-LAST:event_txtbuscarKeyReleased

private void mnenviarproActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnenviarproActionPerformed
// TODO add your handling code here:

    try {
        DefaultTableModel tabladet = (DefaultTableModel) Facturacion.tbfact.getModel();
        String[] dato = new String[4];

        int fila = tbprod.getSelectedRow();

        if (fila<0) {
            JOptionPane.showMessageDialog(null, "No  ha seleccionado ningun registro");
        } else {
            String codins = tbprod.getValueAt(fila, 0).toString();
            String desins = tbprod.getValueAt(fila, 1).toString();
            String preins = tbprod.getValueAt(fila, 2).toString();
            boolean flag;            
            
            String cant = JOptionPane.showInputDialog("ingrese cantidad");
            String comp = comparar(codins);           
            
            if ((cant.equals("")) || (cant.equals("0")) || (cant.matches("[A-Za-z]*"))) {
                JOptionPane.showMessageDialog(this, "Debe ingresar algun valor numerico mayor que 0");
            } else {
                int canting = Integer.parseInt(cant);
                int comp1 = Integer.parseInt(comp);
                
                if (canting > comp1) {
                    JOptionPane.showMessageDialog(this, "¡El valor excede la cantidad disponible!", "Error", JOptionPane.ERROR_MESSAGE);
                } else {
                    flag=false;
                    for (int i = 0; i < Facturacion.tbfact.getRowCount(); i++) {//Busca por toda la tabla factura
                        String com = Facturacion.tbfact.getValueAt(i, 0).toString();
                        
                        if (codins.equals(com)) {//Si se ingresa el mismo producto
                            flag=true;//Existe coincidencia
                            int cantfact=Integer.parseInt(Facturacion.tbfact.getValueAt(i, 3).toString());//Se obtiene la cantidad de la factura
                            int cantnueva=Integer.parseInt(cant);//Obtiene la nueva cantidad ingresada
                            
                            cantfact=cantfact+cantnueva;//Se lo agrega a la cantidad de la factura                            
                            Facturacion.tbfact.setValueAt(cantfact, i, 3);//Actualiza la cantidad                            
                            Facturacion.calcular();
                            i=Facturacion.tbfact.getRowCount();//Optimizacion: Rompe el ciclo repetitivo.
                        }
                    }
                    
                    if (flag == false) {//Si no se ingresa el mismo producto
                        dato[0] = codins;
                        dato[1] = desins;
                        dato[2] = preins;
                        dato[3] = cant;

                        tabladet.addRow(dato);

                        Facturacion.tbfact.setModel(tabladet);
                        Facturacion.calcular();
                    }
                }
            }
        }
    } catch (Exception e) {
        System.out.println(e);
    }

}//GEN-LAST:event_mnenviarproActionPerformed

    private void txtbuscarKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtbuscarKeyTyped
        // TODO add your handling code here:
        char c=evt.getKeyChar();
        
        if((c<'a'||c>'z')&&(c<'A'||c>'Z')&&(c<'0'||c>'9')&&(c!=KeyEvent.VK_BACK_SPACE)&&(c!=KeyEvent.VK_SPACE)){
            evt.consume();
            this.getToolkit().beep();
        }
    }//GEN-LAST:event_txtbuscarKeyTyped

    private void txtbuscarFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtbuscarFocusGained
        // TODO add your handling code here:
        ph.Comparar(txtbuscar);
    }//GEN-LAST:event_txtbuscarFocusGained

    private void txtbuscarFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtbuscarFocusLost
        // TODO add your handling code here:
        if(txtbuscar.getText().trim().length()==0){
            PlaceHolder();
        }
    }//GEN-LAST:event_txtbuscarFocusLost

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        // TODO add your handling code here:
        Facturacion.productos=false;
    }//GEN-LAST:event_formWindowClosed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnmostrar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JMenuItem mnenviarpro;
    public static javax.swing.JTable tbprod;
    private javax.swing.JTextField txtbuscar;
    // End of variables declaration//GEN-END:variables
    public static Conectar cc = new Conectar();
    public static Connection cn = cc.conexion();
    PlaceHolder ph=new PlaceHolder();
}
